legend.title = element_blank(),
legend.position = c(0.15,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p
p1 <- p + annotate("text", x = c(2, 5), y = c(15, 25),
label = c("标签1", "标签2") )
p1
p1 <- p + annotate("text", x = c(-50, 0), y = c(15, 25),
label = c("R2X\n0.428", "R2Y\n0.994","Q2\n0.925") )
p1 <- p + annotate("text", x = c(-50, -35,-20), y = c(-70, -70,-70),
label = c("R2X\n0.428", "R2Y\n0.994","Q2\n0.925") )
p1
?annotate
p1 <- p + annotate("text", x = c(-50, -35,-20), y = c(-70, -70,-70),
label = c("R2X\n0.428", "R2Y\n0.994","Q2\n0.925"),size=6 )
p1
p1 <- p + annotate("text", x = c(-50, -35,-20), y = c(-70, -70,-70),
label = c("R2X\n0.428", "R2Y\n0.994","Q2\n0.925"),size=1 )
p1
p1 <- p + annotate("text", x = c(-50, -35,-20), y = c(-70, -70,-70),
label = c("R2X\n0.428", "R2Y\n0.994","Q2\n0.925"),size=2 )
p1
p1 <- p + annotate("text", x = c(-50, -35,-20), y = c(-75, -75,-75),
label = c("R2X\n0.428", "R2Y\n0.994","Q2\n0.925"),size=2 )
p1
p1 <- p + annotate("text", x = c(-50, -35,-20), y = c(-80, -80,-80),
label = c("R2X\n0.428", "R2Y\n0.994","Q2\n0.925"),size=2 )
p1
####################### CONTROL-PG ######
myCol <- mi[c(1, 3)]
myScore <- getScoreMN("../Fcontrol_PG.data.txt", "../Fcontrol_PG-grouping.txt")
myScore$Type <- "Control vs P.goldsteinii"
scoreMN <- myScore
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.15,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p
p2 <- p + annotate("text", x = c(-50, -35,-20), y = c(-80, -80,-80),
label = c("R2X\n0.421", "R2Y\n0.989","Q2\n0.917"),size=2 )
p2
p2 <- p + annotate("text", x = c(-50, -35,-20), y = c(-90, -90,-90),
label = c("R2X\n0.421", "R2Y\n0.989","Q2\n0.917"),size=2 )
p2
p2 <- p + annotate("text", x = c(-50, -35,-20), y = c(-85, -85,-85),
label = c("R2X\n0.421", "R2Y\n0.989","Q2\n0.917"),size=2 )
p2
####################### DSS-PG ######
myCol <- mi[c(2, 3)]
myScore <- getScoreMN("../FDSS_PG.data.txt", "../FDSS_PG-grouping.txt")
myScore$Type <- "DSS vs P.goldsteinii"
scoreMN <- myScore
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.15,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p
p3 <- p + annotate("text", x = c(-30, -20,-10), y = c(-70, -70,-70),
label = c("R2X\n0.43", "R2Y\n0.994","Q2\n0.812"),size=2 )
p3
p3 <- p + annotate("text", x = c(-35, -25,-15), y = c(-80, -80,-80),
label = c("R2X\n0.43", "R2Y\n0.994","Q2\n0.812"),size=2 )
p3
library(patchwork)
pdf("OPLS-da.pdf", width = 9, height = 3)
p1 + p2 + p3
dev.off()
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
source("I:/博士/IBD/实验/20220902-QTOF/作图/1_OPLS-Da/OPLS-da.R")
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
source("I:/博士/IBD/实验/20220902-QTOF/作图/1_OPLS-Da/OPLS-da.R")
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
source("I:/博士/IBD/实验/20220902-QTOF/作图/1_OPLS-Da/OPLS-da.R")
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
source("I:/博士/IBD/实验/20220902-QTOF/作图/1_OPLS-Da/OPLS-da.R")
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 500, height = 300)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300)
p1 + p2 + p3
dev.off()
?png
png("OPLS-da.png", width = 900, height = 300,res=300)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=100)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=200)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=150)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=120)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=110)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=100)
p1 + p2 + p3
dev.off()
rm(list = ls())
library("ropls")
library(tidyverse)
library(ggalt)
####################### pre ######
getScoreMN <- function(dataFile, groupFile, grp_col = 2) {
grpInfo <- read.table(groupFile,header=T,sep='\t');
FileName <- strsplit(basename(dataFile),'.',fixed=T)[[1]];
SamID <- FileName[1];
Data <- read.table(dataFile,header=T,row.names = 1);
Data.tm <- t(as.matrix(Data));
groupname <- c();
for(i in 1:length(colnames(Data)))
{
groupname <- append(groupname,as.character(grpInfo[grpInfo[,1] == colnames(Data)[i],grp_col]));
}
Groups <- levels(as.factor(groupname));
Data.oplsda <- try(opls(Data.tm ,groupname, predI =1, orthoI = NA),silent=TRUE);
if ('try-error' %in% class(Data.oplsda))
{
Data.oplsda <- opls(Data.tm ,groupname, predI =1, orthoI = 2);
}
scoreMN <- as.data.frame(
cbind(Data.oplsda@scoreMN[,1],
Data.oplsda@orthoScoreMN[,1])
)
scoreMN$name <- rownames(scoreMN)
scoreMN <- full_join(scoreMN, grpInfo) %>%
select(-name)
colnames(scoreMN) <- c("h1", paste0("o", 1), "SampleType")
scoreMN$SampleType <- as.factor(scoreMN$SampleType)
scoreMN$R2X <- paste0(
"t1 (",
format(Data.oplsda@modelDF[1, "R2X"] * 100,
digits = 1, nsmall = 2),
"%)"
)
return(scoreMN)
}
mi=c("#1B9E77" ,"#DC143C", "#7570B3","#E7298A",	"#ADFF2F","#FFD700","#D95F02", "grey")
####################### Control-DSS ######
myCol <- mi[c(1, 2)]
myScore <- getScoreMN("../Fcontrol_DSS.data.txt", "../Fcontrol_DSS-grouping.txt")
myScore$Type <- "Control vs DSS"
scoreMN <- myScore
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.16,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p
rm(list = ls())
library("ropls")
library(tidyverse)
library(ggalt)
####################### pre ######
getScoreMN <- function(dataFile, groupFile, grp_col = 2) {
grpInfo <- read.table(groupFile,header=T,sep='\t');
FileName <- strsplit(basename(dataFile),'.',fixed=T)[[1]];
SamID <- FileName[1];
Data <- read.table(dataFile,header=T,row.names = 1);
Data.tm <- t(as.matrix(Data));
groupname <- c();
for(i in 1:length(colnames(Data)))
{
groupname <- append(groupname,as.character(grpInfo[grpInfo[,1] == colnames(Data)[i],grp_col]));
}
Groups <- levels(as.factor(groupname));
Data.oplsda <- try(opls(Data.tm ,groupname, predI =1, orthoI = NA),silent=TRUE);
if ('try-error' %in% class(Data.oplsda))
{
Data.oplsda <- opls(Data.tm ,groupname, predI =1, orthoI = 2);
}
scoreMN <- as.data.frame(
cbind(Data.oplsda@scoreMN[,1],
Data.oplsda@orthoScoreMN[,1])
)
scoreMN$name <- rownames(scoreMN)
scoreMN <- full_join(scoreMN, grpInfo) %>%
select(-name)
colnames(scoreMN) <- c("h1", paste0("o", 1), "SampleType")
scoreMN$SampleType <- as.factor(scoreMN$SampleType)
scoreMN$R2X <- paste0(
"t1 (",
format(Data.oplsda@modelDF[1, "R2X"] * 100,
digits = 1, nsmall = 2),
"%)"
)
return(scoreMN)
}
mi=c("#1B9E77" ,"#DC143C", "#7570B3","#E7298A",	"#ADFF2F","#FFD700","#D95F02", "grey")
####################### Control-DSS ######
myCol <- mi[c(1, 2)]
myScore <- getScoreMN("../Fcontrol_DSS.data.txt", "../Fcontrol_DSS-grouping.txt")
myScore$Type <- "Control vs DSS"
scoreMN <- myScore
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.16,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.16,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
####################### Control-DSS ######
myCol <- mi[c(1, 2)]
myScore <- getScoreMN("../Fcontrol_DSS.data.txt", "../Fcontrol_DSS-grouping.txt")
myScore$Type <- "Control vs DSS"
scoreMN <- myScore
View(scoreMN)
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.16,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p
p1 <- p + annotate("text", x = c(-50, -35,-20), y = c(-80, -80,-80),
label = c("R2X\n0.427", "R2Y\n0.994","Q2\n0.924"),size=2 )
p1
####################### CONTROL-PG ######
myCol <- mi[c(1, 3)]
myScore <- getScoreMN("../Fcontrol_PG.data.txt", "../Fcontrol_PG-grouping.txt")
myScore$Type <- "Control vs P.goldsteinii"
scoreMN <- myScore
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.22,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p
p2 <- p + annotate("text", x = c(-48, -33,-18), y = c(-86, -86,-86),
label = c("R2X\n0.43", "R2Y\n0.99","Q2\n0.91"),size=2 )
p2
####################### DSS-PG ######
myCol <- mi[c(2, 3)]
myScore <- getScoreMN("../FDSS_PG.data.txt", "../FDSS_PG-grouping.txt")
myScore$Type <- "DSS vs P.goldsteinii"
scoreMN <- myScore
p <- ggplot(scoreMN,
aes(
h1,
o1,
color = SampleType
)
) +
geom_point( size = 2, alpha = 0.7) +
stat_ellipse(type = "t", linetype = 2, show.legend = FALSE)+ #linetype ='solid'
geom_encircle(s_shape=1, expand=0, alpha = 0.7) +
labs(
x = paste0(as.character(unique(scoreMN$R2X))),
y = "to1",
title = as.character(unique(scoreMN$Type))
) +
theme_bw(base_size = 12) +
scale_colour_manual(values = myCol) +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = c(0.6,0.85)
) +
theme(legend.background = element_blank()) +
theme(legend.key = element_blank())+
geom_hline(yintercept = 0, linetype = 2, size = 0.4, alpha = 0.6) +
geom_vline(xintercept = 0, linetype = 2, size = 0.4, alpha = 0.6)
p
p3 <- p + annotate("text", x = c(-31, -21,-11), y = c(-84, -84,-84),
label = c("R2X\n0.423", "R2Y\n0.996","Q2\n0.819"),size=2 )
p3
library(patchwork)
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=100)
p1 + p2 + p3
dev.off()
source("I:/博士/IBD/实验/20220902-QTOF/作图/fecal/1_OPLS-Da/OPLS-da.R")
rm(list = ls())
library("ropls")
install.packages("ropls")
library(ropls)
library(tidyverse)
library(ropls)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ropls")
library(ropls)
library(ropls)
library(tidyverse)
library(ggalt)
source("I:/博士/IBD/实验/20220902-QTOF/作图/fecal/1_OPLS-Da/OPLS-da.R")
p3
library(patchwork)
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=100)
p1 + p2 + p3
dev.off()
source("I:/博士/IBD/实验/20220902-QTOF/作图/fecal/1_OPLS-Da/OPLS-da.R")
library(patchwork)
pdf("OPLS-da.pdf", width = 10, height = 3)
p1 + p2 + p3
dev.off()
png("OPLS-da.png", width = 900, height = 300,res=100)
p1 + p2 + p3
dev.off()
source("F:/博士/IBD/小论文/20241126_iMetaomics/修稿/github/Fig S5/OPLS-da.R")
p1 + p2 + p3
p = p1 + p2 + p3
pdf("OPLS-da.pdf", width = 10, height = 3)
p
dev.off()
source("F:/博士/IBD/小论文/20241126_iMetaomics/修稿/github/Fig S5/OPLS-da.R")
pdf("OPLS-da.pdf", width = 10, height = 3)
p
dev.off()
source("F:/博士/IBD/小论文/20241126_iMetaomics/修稿/github/Fig S5/OPLS-da.R")
dev.off()
pdf("OPLS-da.pdf", width = 10, height = 3)
p
dev.off()
source("F:/博士/IBD/小论文/20241126_iMetaomics/IMO_2025/figS5/OPLS-da.R")
dev.off()
source("F:/博士/IBD/小论文/20241126_iMetaomics/IMO_2025/figS5/figS5.R")
pdf("figS5.pdf", width = 10, height = 3)
p
dev.off()
